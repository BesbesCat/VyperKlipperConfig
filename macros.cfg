# Cura Start G-code
# START_PRINT_CURA
[gcode_macro START_PRINT_CURA]
description: Start G-code for Cura
gcode:
    G21 ;metric values
    G90 ;absolute positioning
    M82 ;set extruder to absolute mode
    M107 ;start with the fan off
    BED_MESH_PROFILE LOAD=default
    THE_LEGEND_OF_ZELDA_SECRET_DISCOVERY
    G28 X0 Y0 ;move X/Y to min endstops
    M300 S1318 P266
    G28 Z0 ;move Z to min endstops
    G0 Z0.2
    G92 E0 ;zero the extruded length
    G1 X40 E25 F400 ; Extrude 25mm of filament in a 4cm line. Reduce speed (F) if you have a nozzle smaller than 0.4mm!
    G92 E0 ;zero the extruded length again
    G1 E-1 F500 ; Retract a little
    G1 X80 F4000 ; Quickly wipe away from the filament line
    M117 ; Printingâ€¦
    G5

# Cura END G-code
# END_PRINT_CURA
[gcode_macro END_PRINT_CURA]
description: End G-code for Cura
gcode:
    M104 S0 ; turn off extruder
    M140 S0 ; turn off bed
    M107
    G91 ;relative positioning
    G1 E-1 F300 ;retract the filament a bit before lifting the nozzle, to release some of the pressure
    G1 Z+0.5 E-5 ;X-20 Y-20 F{speed_travel} ;move Z up a bit and retract filament even more
    G28 X0 Y0 ;move X/Y to min endstops, so the head is out of the way
    G1 Y180 F2000
    M84 ;steppers off
    G90
    M300 S1318 P266
    THE_LEGEND_OF_ZELDA_MAGIC_RECORDER

# CALIBRATION
#

[gcode_macro HOME_IF_NOT_HOME]
description: You can't go home again
gcode:
    {% if printer.toolhead.homed_axes != 'xyz' %}
    G28                # Auto Home
    {% endif %}


[gcode_macro HOME_AND_CENTER]
description: Home all & center nozzle (if not already)
gcode:
    HOME_IF_NOT_HOME
    G90                # Absolute Positioning
    G0 X122.5 Y122.5   # Linear Move - Non-Print
   #{ action_respond_info("Head positioned at center...") }


[gcode_macro PROBE_CALIBRATE_POSITION]
description: Move carriage to center of bed for PROBE_CALIBRATE
gcode:
    HOME_AND_CENTER
    TURN_ON_LED        # LED On


[gcode_macro CALIBRATE_BED_MESH]
description: Calibrate bed mesh
gcode:
    HOME_IF_NOT_HOME
    M140 S60           # Set Bed Temperature
    M190 S60           # Wait for Bed Temperature
    M104 S150          # Set Hotend Temperature
    M109 S150          # Wait for Hotend Temperature
    BED_MESH_CALIBRATION
   #{ action_respond_info("Ready for bed mesh calibration...") }


[gcode_macro BED_MESH_CALIBRATION]
gcode:
    BED_MESH_PROFILE REMOVE=default
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    THE_LEGEND_OF_ZELDA_SECRET_DISCOVERY
    SAVE_CONFIG

[gcode_macro PID_EXTRUDER]
description: Perform PID tuning of extruder with desired fan speed
gcode:
    {% set extruder_temp = params.EXTRUDER_TEMP|default(200)|float %}
    {% set fan_speed = params.FAN_SPEED|default(255)|int %}
    TURN_ON_FAN SPEED={fan_speed}
    PID_CALIBRATE HEATER=extruder TARGET={extruder_temp}

[gcode_macro PID_BED]
gcode:
    {% set heater_bed_target = params.TARGET|default(60)|float %}
    TURN_OFF_FAN
    PID_CALIBRATE HEATER=heater_bed TARGET={heater_bed_target}




# MAINTENANCE
#

[gcode_macro UNLOAD_FILAMENT]
gcode:
    HOME_IF_NOT_HOME
    M109 S210          # Wait for Hotend Temperature
    TURN_OFF_LED       # LED Off
    M83                # E Relative
    G0 E2 F300         # Linear Move - Non-Print - Extrude Only
    G0 E-15 F3000      # Linear Move - Non-Print
    G0 E-100 F500      # Linear Move - Non-Print
    G0 E-300 F2000     # Linear Move - Non-Print
    G0 E-85 F250       # Linear Move - Non-Print
    M82                # E Absolute
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=0
    THE_LEGEND_OF_ZELDA_ITEM_SAVE_CONTINUE_RETRY_SCREEN


[gcode_macro LOAD_FILAMENT]
gcode:
    HOME_IF_NOT_HOME
    M109 S210          # Wait for Hotend Temperature
    TURN_ON_LED        # LED On
    M83                # E Relative
    G0 E400 F400       # Linear Move - Print - Extrude Only
    G0 E150 F400       # Linear Move - Print - Extrude Only
    M82                # E Absolute
    SET_FILAMENT_SENSOR SENSOR=runout ENABLE=1
    THE_LEGEND_OF_ZELDA_ITEM_SAVE_CONTINUE_RETRY_SCREEN


[gcode_macro DISABLE_STEPPERS]
gcode:
    M18                # Disable steppers


[gcode_macro TURN_ON_FAN]
description: Turn on print cooling fan and set its speed
# usage: TURN_ON_FAN [SPEED=<speed>]
gcode:
    {% set S = params.SPEED|default(255)|int %}
    {% if S > 255 or S < 0 %}
        { action_raise_error("S%i is out of range." | format(S)) }
    {% endif %}

    M106 S{S}          # Set Fan Speed


[gcode_macro TURN_OFF_FAN]
gcode:
    M107               # Fan Off


[gcode_macro TURN_ON_LED]
gcode:
    SET_PIN PIN=LED VALUE=1


[gcode_macro TURN_OFF_LED]
gcode:
    SET_PIN PIN=LED VALUE=0


[gcode_macro TURN_OFF_EVERYTHING]
gcode:
    TURN_OFF_HEATERS   # Klipper macro
    TURN_OFF_FAN
    TURN_OFF_LED       # LED On


[gcode_macro MAINTENANCE_POSITION]
description: Move carriage to maintenance position for easier access
gcode:
    HOME_IF_NOT_HOME
    G0 Z150 F1000      # Linear Move - Non-Print
    TURN_OFF_EVERYTHING
    DISABLE_STEPPERS
    TURN_ON_LED        # LED On



[gcode_macro SEARCH_VARS]
description: Search for variables based on string input
# usage: 'SEARCH_VARS s="profile"'
gcode:
    {% if not params.S %}
        {action_respond_info("hmm.. try 'SEARCH_VARS s=\"profile\"'")}
    {% else %}
        {% set resultcount = namespace(total=0) %}
        {% set search = params.S|lower %}
        {% set ns = namespace() %}
        {% for item in printer  %}
            {% if ' ' in item %}
                {% set ns.path = ['printer', "['%s']" % (item), ''] %}
            {% else %}
                {% set ns.path = ['printer.', item, ''] %}   
            {% endif %} 
    
            {% if search in ns.path|lower %}
                { action_respond_info(ns.path|join) }
                {% set resultcount.total = 1 + resultcount.total %}
            {% endif %} 
    
            {% if printer[item].items() %}
                {% for childkey, child in printer[item].items() recursive %}
                    {% set ns.path = ns.path[:loop.depth|int + 1] %}
    
                    {% if ' ' in childkey %}
                        {% set null = ns.path.append("['%s']" % (childkey)) %}
                    {% else %}
                        {% set null = ns.path.append(".%s" % (childkey)) %}
                    {% endif %} 
    
                    {% if child is mapping  %}
                        { loop(child.items()) }
                    {% else %}
                        {% if search in ns.path|lower %}
                            { action_respond_info("%s : %s" % (ns.path|join, child)) }
                            {% set resultcount.total = 1 + resultcount.total %}
                        {% endif %} 
                    {% endif %} 
                    
                {% endfor %}
            {% endif %} 
        {% endfor %}
        {% if resultcount.total >= 1 %}
            {action_respond_info("found \"" + params.S + "\" " + resultcount.total|string +" times.")}
        {% else %}
            {action_respond_info("\"" + params.S + "\" not found.")}
        {% endif %} 
        {% set resultcount.total = 0|int %}
    {% endif %}




######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state




######################################################################
# PAUSE PRINT
######################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    {%set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {%set act_extrude_temp = printer.extruder.temperature|int %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if act_extrude_temp > min_extrude_temp %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 



######################################################################
# RESUME PRINT
######################################################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    {% set min_extrude_temp = printer.configfile.settings["extruder"]["min_extrude_temp"]|int %}
    {% set act_extrude_temp = printer.extruder.temperature|int %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {% else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if act_extrude_temp > min_extrude_temp %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}


[gcode_macro PRESSURE_ADVANCE_CALIBRATION]
description: Adjust velocity & pressure advance parameters for bowden extruder
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=1500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020